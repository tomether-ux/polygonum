name: Polygonum Cycle Calculator
on:
  push:
    branches: [ main ]
  schedule:
    # Ogni 30 minuti (stessa cadenza del cron job di Render)
    - cron: '*/30 * * * *'
  workflow_dispatch: # Permette esecuzione manuale

jobs:
  calculate-cycles:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger cycle calculation
        run: |
          echo "üöÄ Triggering Polygonum cycle calculation..."

          # Funzione per chiamare il webhook con retry
          call_webhook() {
            local attempt=$1
            local timeout=$2
            echo "‚è∞ Attempt $attempt with timeout ${timeout}s..."

            response=$(curl -s -w "%{http_code}" --max-time $timeout \
              -X POST \
              -H "Authorization: Bearer ${{ secrets.POLYGONUM_WEBHOOK_SECRET }}" \
              -H "Content-Type: application/json" \
              https://polygonum.onrender.com/webhook/calcola-cicli/)

            http_code="${response: -3}"
            response_body="${response%???}"

            echo "üìä Response code: $http_code"
            echo "üìÑ Response body: $response_body"

            # Return 0 for success (200), 1 for failure
            if [ "$http_code" -eq 200 ]; then
              return 0
            else
              return 1
            fi
          }

          # Primo tentativo: wake-up veloce (60s)
          echo "üîå Attempting to wake up Render service..."
          if call_webhook 1 60; then
            echo "‚úÖ Cycle calculation completed successfully on first attempt!"
            exit 0
          fi

          # Secondo tentativo: timeout lungo per servizi dormienti (240s = 4 minuti)
          echo "üò¥ Service seems asleep, trying with longer timeout..."
          sleep 10  # Pausa breve tra i tentativi

          if call_webhook 2 240; then
            echo "‚úÖ Cycle calculation completed successfully on second attempt!"
            exit 0
          fi

          # Fallback: se tutti i tentativi falliscono
          echo "‚ùå All attempts failed. Service may be down or overloaded."
          exit 1